{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\allsv\\\\Desktop\\\\interview_test\\\\scan-tracking\\\\src\\\\components\\\\TrackingInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Select, FormControl } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport './TrackingInput.css';\nimport { db } from '../firebase';\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: '#1E9DF3',\n    textTransform: 'none',\n    border: 'none',\n    boxShadow: 'none',\n    color: 'white',\n    height: '3rem',\n    fontSize: '1.1rem',\n    '&:hover': {\n      backgroundColor: '#0774BD',\n      boxShadow: 'none'\n    },\n    '&:disabled': {\n      backgroundColor: \"#1E9DF3\",\n      color: 'white',\n      opacity: 0.7\n    }\n  },\n  textField: {\n    marginBottom: '1.5rem'\n  },\n  alert: {\n    marginBottom: '1.5rem'\n  }\n});\n\nfunction TrackingInput() {\n  _s();\n\n  const classes = useStyles();\n  const [trackingNumber, setTrackingNumber] = useState('');\n  const [parcelType, setParcelType] = useState('Normal');\n  const [amount, setAmount] = useState(1);\n  const [error, setError] = useState('');\n\n  const handleTrackingNumber = e => {\n    if (e.target.value.length === 4 || e.target.value.length === 9) {\n      setTrackingNumber(e.target.value += '-');\n    } else {\n      setTrackingNumber(e.target.value);\n    }\n  };\n\n  const fetchPendingItems = async () => {\n    try {\n      const resp = await db.collection('pendingItems').doc(trackingNumber).get();\n      const data = resp.data();\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleParcelType = e => {\n    setParcelType(e.target.value);\n  };\n\n  const handleAdd = async e => {\n    e.preventDefault();\n    setError('');\n    const backup = await fetchPendingItems();\n\n    try {\n      await db.collection('scannedItems').doc(trackingNumber).set({\n        backup: backup,\n        amount: amount,\n        parcelType: parcelType\n      });\n    } catch (error) {\n      setError(error.message);\n    }\n\n    if (!error) {\n      db.collection('pendingItems').doc(trackingNumber).delete().catch(error => {\n        setError(error.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleAdd,\n    className: \"trackingform\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"trackingform__label\",\n      children: \"Tracking Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      value: trackingNumber,\n      onChange: handleTrackingNumber,\n      placeholder: \"xxxx-xxxx-xxxx\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      type: \"text\",\n      inputProps: {\n        maxLength: 14\n      },\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      margin: \"dense\",\n      variant: \"outlined\",\n      className: classes.textField,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"trackingform__label\",\n        children: \"Parcel Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        native: true,\n        value: parcelType,\n        onChange: handleParcelType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 'Normal',\n          children: \"Normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 'Carton',\n          children: \"Carton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 'Frozen',\n          children: \"Frozen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"trackingform__label\",\n      children: \"Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: classes.textField,\n      id: \"outlined-margin-dense\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      type: \"text\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      className: classes.alert,\n      severity: \"error\",\n      children: \"Check you tracking number !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: trackingNumber.length !== 14,\n      className: classes.button,\n      variant: \"contained\",\n      children: 'Add To Scanned List -->'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TrackingInput, \"7EAxMPHzW6AdgUDNiDV3U09m+R8=\", false, function () {\n  return [useStyles];\n});\n\n_c = TrackingInput;\nexport default TrackingInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackingInput\");","map":{"version":3,"sources":["C:/Users/allsv/Desktop/interview_test/scan-tracking/src/components/TrackingInput.js"],"names":["React","useState","makeStyles","TextField","Button","Select","FormControl","Alert","db","useStyles","button","backgroundColor","textTransform","border","boxShadow","color","height","fontSize","opacity","textField","marginBottom","alert","TrackingInput","classes","trackingNumber","setTrackingNumber","parcelType","setParcelType","amount","setAmount","error","setError","handleTrackingNumber","e","target","value","length","fetchPendingItems","resp","collection","doc","get","data","console","log","message","handleParcelType","handleAdd","preventDefault","backup","set","delete","catch","maxLength"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField, Button, Select, FormControl } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport './TrackingInput.css';\r\nimport { db } from '../firebase';\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    backgroundColor: '#1E9DF3',\r\n    textTransform: 'none',\r\n    border: 'none',\r\n    boxShadow: 'none',\r\n    color: 'white',\r\n    height: '3rem',\r\n    fontSize: '1.1rem',\r\n    '&:hover': {\r\n      backgroundColor: '#0774BD',\r\n      boxShadow: 'none',\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: \"#1E9DF3\",\r\n      color: 'white',\r\n      opacity: 0.7\r\n    }\r\n  },\r\n\r\n  textField: {\r\n    marginBottom: '1.5rem',\r\n  },\r\n\r\n  alert: {\r\n    marginBottom: '1.5rem'\r\n  }\r\n\r\n});\r\n\r\nfunction TrackingInput() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [trackingNumber, setTrackingNumber] = useState('');\r\n  const [parcelType, setParcelType] = useState('Normal');\r\n  const [amount, setAmount] = useState(1);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleTrackingNumber = (e) => {\r\n    if (e.target.value.length === 4 || e.target.value.length === 9) {\r\n      setTrackingNumber(e.target.value += '-');\r\n    } else {\r\n      setTrackingNumber(e.target.value);\r\n    }\r\n  }\r\n\r\n  const fetchPendingItems = async () => {\r\n    try {\r\n      const resp = await db.collection('pendingItems').doc(trackingNumber).get()\r\n      const data = resp.data();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n\r\n  const handleParcelType = (e) => {\r\n    setParcelType(e.target.value);\r\n  }\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    const backup = await fetchPendingItems();\r\n    try {\r\n      await db.collection('scannedItems').doc(trackingNumber).set({\r\n        backup: backup,\r\n        amount: amount,\r\n        parcelType: parcelType\r\n      })\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n\r\n    if (!error) {\r\n      db.collection('pendingItems').doc(trackingNumber).delete().catch(error => {\r\n        setError(error.message);\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleAdd} className='trackingform'>\r\n      <label className='trackingform__label'>Tracking Number</label>\r\n      <TextField\r\n        className={classes.textField}\r\n        value={trackingNumber}\r\n        onChange={handleTrackingNumber}\r\n        placeholder='xxxx-xxxx-xxxx'\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        type='text'\r\n        inputProps={{ maxLength: 14 }}\r\n        required\r\n      />\r\n      <FormControl margin='dense' variant=\"outlined\" className={classes.textField}>\r\n        <label className='trackingform__label'>Parcel Type</label>\r\n        <Select\r\n          native\r\n          value={parcelType}\r\n          onChange={handleParcelType}\r\n        >\r\n          <option value={'Normal'}>Normal</option>\r\n          <option value={'Carton'}>Carton</option>\r\n          <option value={'Frozen'}>Frozen</option>\r\n        </Select>\r\n      </FormControl>\r\n      <label className='trackingform__label'>Amount</label>\r\n      <TextField\r\n        className={classes.textField}\r\n        id=\"outlined-margin-dense\"\r\n        margin=\"dense\"\r\n        variant=\"outlined\"\r\n        type='text'\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n      />\r\n      {error && <Alert className={classes.alert} severity=\"error\">Check you tracking number !</Alert>}\r\n      <Button type='submit' disabled={trackingNumber.length !== 14} className={classes.button} variant='contained'>{'Add To Scanned List -->'}</Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TrackingInput\r\n"]},"metadata":{},"sourceType":"module"}